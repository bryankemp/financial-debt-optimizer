name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Reduce matrix size for faster CI
          - os: windows-latest
            python-version: "3.8"
          - os: macos-latest
            python-version: "3.8"
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    
    - name: Install package in development mode
      run: |
        pip install -e .
    
    - name: Lint with flake8
      run: |
        flake8 debt_optimizer tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 debt_optimizer tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check --diff debt_optimizer tests
    
    - name: Sort imports with isort
      run: |
        isort --check-only --diff debt_optimizer tests
    
    - name: Check PEP 8 compliance with pycodestyle
      run: |
        pycodestyle debt_optimizer tests --max-line-length=88 --ignore=E203,W503 --statistics
    
    - name: Type check with mypy
      run: |
        mypy debt_optimizer/ --ignore-missing-imports --no-strict-optional
    
    - name: Run unit tests
      run: |
        pytest -m "unit" --cov-report=xml --cov-report=term
    
    - name: Run integration tests
      run: |
        pytest -m "integration" --cov-append --cov-report=xml --cov-report=term
    
    - name: Run all tests with coverage
      run: |
        pytest --cov=debt_optimizer --cov-report=xml --cov-report=term --cov-fail-under=75
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-slow:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        pip install -e .
    
    - name: Run slow tests
      run: |
        pytest -m "slow" --maxfail=5 --tb=short

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run safety check
      run: |
        safety check --json
    
    - name: Run bandit security check
      run: |
        bandit -r debt_optimizer -f json